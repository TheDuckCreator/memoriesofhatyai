{"version":3,"sources":["Firebase.js","Congrat.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","FirebaseConfig","database","Congrat","props","state","congratId","value","name","photo","department","congratText","flowerName","flowerDefinition","ref","this","on","snapshot","val","definition","setState","className","src","class","href","title","Component","App","onChange","e","target","console","log","code","show","onCodeSubmit","preventDefault","refNo","onSubmit","type","required","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43e3dafb.chunk.js","sourcesContent":["const firebaseConfig = {\r\n  apiKey: \"AIzaSyCtjIqTScn4AVK3Ghb2BL1wlVqje_jWPHw\",\r\n  authDomain: \"med44congrat.firebaseapp.com\",\r\n  databaseURL: \"https://med44congrat.firebaseio.com\",\r\n  projectId: \"med44congrat\",\r\n  storageBucket: \"med44congrat.appspot.com\",\r\n  messagingSenderId: \"578165062765\",\r\n  appId: \"1:578165062765:web:89760e3c2aab061e745364\"\r\n}\r\nexport default firebaseConfig\r\n","import React, { Component } from \"react\"\r\nimport \"./CongratApp.css\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport FirebaseConfig from \"./Firebase\"\r\nimport firebase from \"firebase\"\r\nimport \"react-router-dom\"\r\nfirebase.initializeApp(FirebaseConfig)\r\nlet database = firebase.database()\r\n\r\nclass Congrat extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      congratId: this.props.value,\r\n      name: \"\",\r\n      photo: \"\",\r\n      department: \"\",\r\n      congratText: \"\",\r\n      flowerName: \"\",\r\n      flowerDefinition: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let congratulation = database.ref(\"/congrat/\" + this.state.congratId)\r\n    congratulation.on(\"value\", snapshot => {\r\n      let name = (snapshot.val() && snapshot.val().name) || \"พี่ ๆ ทุก ๆ คน\"\r\n      let photo =\r\n        (snapshot.val() && snapshot.val().photo) ||\r\n        \"https://dev.theduckcreator.in.th/theethawat/freepik-icon/boy2.png\"\r\n      let department =\r\n        (snapshot.val() && snapshot.val().department) || \"Engineering\"\r\n      let congratText =\r\n        (snapshot.val() && snapshot.val().congratText) ||\r\n        \"ยินดีด้วยนะครับพี่ๆ ที่จบการศึกษาทุกคน ความสำเร็จของพี่ ๆ คือกำลังใจให้กับรุ่นน้อง ๆ ต่อไปก้าวเดินต่อนะครับ\"\r\n\r\n      let flowerDB = database.ref(\"/flower/\" + department)\r\n      flowerDB.on(\"value\", snapshot => {\r\n        let flowerName = (snapshot.val() && snapshot.val().name) || \"\"\r\n        let flowerDefinition =\r\n          (snapshot.val() && snapshot.val().definition) || \"\"\r\n        this.setState({\r\n          flowerName: flowerName,\r\n          flowerDefinition: flowerDefinition\r\n        })\r\n      })\r\n\r\n      this.setState({\r\n        name: name,\r\n        photo: photo,\r\n        department: department,\r\n        congratText: congratText\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <img\r\n          className=\"img-fluid cap piccenter\"\r\n          src=\"http://dev.theduckcreator.in.th/theethawat/freepik-icon/mortarboard.png\"\r\n        />\r\n        <h2 className=\"kanit acenter text-uppercase orange-text\">\r\n          Congratulation\r\n        </h2>\r\n        <h2 className=\"kanit acenter\">\r\n          ยินดีด้วยนะครับ{this.state.name} {this.state.department} PSU\r\n        </h2>\r\n        <img\r\n          class=\"avatar-pic img-fluid piccenter rounded \"\r\n          src={this.state.photo}\r\n        />\r\n        <br />\r\n\r\n        <blockquote className=\"blockquote kanitlight acenter\">\r\n          <p>{this.state.congratText}</p>\r\n        </blockquote>\r\n\r\n        <p className=\"kanit acenter\">\r\n          ติน - A-Intania 50 / CoE'28\r\n          <br />8 September 2019\r\n        </p>\r\n        <br />\r\n        <img\r\n          src=\"https://dev.theduckcreator.in.th/theethawat/congratphoto/20190907_175428.jpg\"\r\n          class=\"flower img-responsive piccenter\"\r\n        />\r\n        <h5 className=\"kanit acenter\">{this.state.flowerName}</h5>\r\n        <p className=\"kanitlight acenter\">{this.state.flowerDefinition}</p>\r\n\r\n        <p className=\"kanitlight acenter\">\r\n          <span className=\"text-info\">\r\n            Memories of Hatyai Project | Graduation Ceremony\r\n          </span>\r\n          <br />\r\n          <b>Faculty of Engineering, Prince of Songkla University </b>\r\n          <br />\r\n          Hatyai Songkhla, Thailand\r\n        </p>\r\n        <p className=\"kanitlight acenter\">\r\n          <small>\r\n            <div>\r\n              Icons made by{\" \"}\r\n              <a\r\n                href=\"https://www.flaticon.com/authors/freepik\"\r\n                title=\"Freepik\"\r\n              >\r\n                Freepik\r\n              </a>{\" \"}\r\n              from{\" \"}\r\n              <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                www.flaticon.com\r\n              </a>\r\n            </div>\r\n          </small>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Congrat\r\n","import React, { Component } from \"react\"\r\nimport Congrat from \"./Congrat\"\r\nimport \"./CongratApp.css\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      code: \"\",\r\n      show: false\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    const { name, value } = e.target\r\n    console.log(\"Name\" + name + \"code \" + value)\r\n    this.setState({\r\n      code: value,\r\n      show: false\r\n    })\r\n    console.log(\"State Code\" + this.state.code)\r\n  }\r\n\r\n  onCodeSubmit = e => {\r\n    e.preventDefault()\r\n    console.log(\"This .code is\" + this.state.code)\r\n    let refNo = 0\r\n    switch (this.state.code) {\r\n      case \"CW'NunPhuchong\":\r\n        refNo = 1\r\n        break\r\n      case \"ThansutaMnnthn\":\r\n        refNo = 2\r\n        break\r\n      case \"KanthamasJunnuan\":\r\n        refNo = 3\r\n        break\r\n      case \"NoPaphawin\":\r\n        refNo = 4\r\n        break\r\n      case \"ThirapornUtarapichart\":\r\n        refNo = 6\r\n        break\r\n      case \"SaharadDensrisereekul\":\r\n        refNo = 7\r\n        break\r\n      case \"JasmineWiroolhakiat\":\r\n        refNo = 8\r\n        break\r\n      case \"ไอแอม'มมแรบบิท\":\r\n        refNo = 9\r\n        break\r\n      case \"FiradaoBennui\":\r\n        refNo = 10\r\n        break\r\n      case \"BoonDet\":\r\n        refNo = 11\r\n        break\r\n      case \"ChattarinHorhirunkul\":\r\n        refNo = 12\r\n        break\r\n      case \"PeachyPeach\":\r\n        refNo = 13\r\n        break\r\n      case \"KanitJongpunyalert\":\r\n        refNo = 14\r\n        break\r\n\r\n      default:\r\n        refNo = 20\r\n        break\r\n    }\r\n    this.setState({\r\n      code: refNo,\r\n      show: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let show\r\n    if (this.state.show == true) {\r\n      show = <Congrat value={this.state.code} />\r\n    } else show = \"\"\r\n\r\n    return (\r\n      <div className=\"container enter-code\">\r\n        <br />\r\n        <h3 className=\"kanitlight acenter\">Memories of Hatyai</h3>\r\n        <form onSubmit={this.onCodeSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4 piccenter acenter\">\r\n              <label className=\"kanitlight\">Enter Your Code</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"code\"\r\n                class=\"form-control kanitlight \"\r\n                onChange={this.onChange}\r\n                required\r\n              />\r\n              <br />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary kanitlight piccenter acenter\"\r\n              >\r\n                Activate\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <br />\r\n        <p className=\"kanitlight acenter\">\r\n          <small>\r\n            ใส่ชื่อ Facebook ของพี่ ๆ (ณ วันที่ 8 กันยายน 2562) โดยไม่มีช่องว่าง\r\n            และ ตัวใหญ่ตัวเล็กตามชื่อ (Case Sensitive) เป็นโค้ดครับ เช่น\r\n            Theethawat Savastham โค้ดเป็น TheethawatSavastham\r\n            ไม่ว่าจะเป็นภาษาอังกฤษหรือภาษาไทย รวมถึงกรณีชื่อมีสัญลักษณ์อื่นๆเช่น\r\n            ' หรือ _ ใส่ด้วยครับผม{\" \"}\r\n          </small>\r\n        </p>\r\n        <hr />\r\n        {show}\r\n        <hr />\r\n        <p className=\"kanitlight acenter\">\r\n          With Love From{\" \"}\r\n          <a href=\"https://www.facebook.com/tin.savastham\">Tin</a> and{\" \"}\r\n          <a href=\"https://www.theduckcreator.in.th\">TDC</a>{\" \"}\r\n          <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">\r\n            Creative Commons Attribution 4.0 International License\r\n          </a>\r\n          .{\" \"}\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}